def process(exchange: Exchange) {
  <selection>  
  val event = exchange.getIn.getBody.asInstanceOf[F]
  eventFacts.get(keyExtractor(event)) match {
    case Some(fact) => session update (fact, event)
    case None => eventFacts update (keyExtractor(event), session insert event)
  }
  if (fireOnUpdate) session fireAllRules
  </selection>
}
-----
0(1) element: None
1(2) READ exchange
2(3) VAL event
3(4) element: MatchStatement
4(5,7,12) READ eventFacts
5(6,7,12) READ keyExtractor
6(7,12) READ event
7(8) VAL fact
8(9) READ session
9(10) READ update
10(11) READ fact
11(19) READ event
12(13) READ eventFacts
13(14) READ update
14(15,16) READ keyExtractor
15(16) READ event
16(17) READ session
17(18) READ insert
18(19) READ event
19(20) element: IfStatement
20(21,23) READ fireOnUpdate
21(22) READ session
22(23) READ fireAllRules
23() element: None