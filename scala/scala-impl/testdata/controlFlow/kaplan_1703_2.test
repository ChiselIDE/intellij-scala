def process(exchange: Exchange) {
      <selection>
      val events = exchange.getIn.getHeader(Exchange.GROUPED_EXCHANGE).asInstanceOf[juList]
      events.foreach { _ match {
        case event: MTCEvent => println("foo")
      }}
      eventFacts.get(key(event)) match {
        case Some(factHandle) => session update (factHandle, event)
        case None => eventFacts update (key(event), session insert event)
      }
      session fireAllRules
      </selection>
}
-----
0(1) element: None
1(2,3) READ exchange
2(3) READ Exchange
3(4) VAL events
4(5,9) READ events
5(6) element: MatchStatement
6(7) VAL event
7(8,9) READ println
8(9) Lit: "foo"
9(10) element: MatchStatement
10(11,13,18) READ eventFacts
11(12,13,18) READ key
12(13,18) READ event
13(14) VAL factHandle
14(15) READ session
15(16) READ update
16(17) READ factHandle
17(25) READ event
18(19) READ eventFacts
19(20) READ update
20(21,22) READ key
21(22) READ event
22(23) READ session
23(24) READ insert
24(25) READ event
25(26) READ session
26(27) READ fireAllRules
27() element: None
