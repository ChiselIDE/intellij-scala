package ch.epfl.lamp.compiler.msil.emit

class AssemblyBuilder(name: ch.epfl.lamp.compiler.msil.AssemblyName) extends ch.epfl.lamp.compiler.msil.Assembly with ch.epfl.lamp.compiler.msil.emit.ICustomAttributeSetter with ch.epfl.lamp.compiler.msil.emit.Visitable {
  def DefineDynamicModule(name: scala.Predef.String, fileName: scala.Predef.String): ch.epfl.lamp.compiler.msil.emit.ModuleBuilder = ???

  def GetDynamicModule(name: scala.Predef.String): ch.epfl.lamp.compiler.msil.emit.ModuleBuilder = ???

  @scala.throws[T](classOf[java.io.IOException])
  def Save(fileName: scala.Predef.String): scala.Unit = ???

  @scala.throws[T](classOf[java.io.IOException])
  def Save(destPath: scala.Predef.String, sourceFilesPath: scala.Predef.String): scala.Unit = ???

  def GetGeneratedFiles(): scala.Array[scala.Predef.String] = ???

  def SetEntryPoint(entryMethod: ch.epfl.lamp.compiler.msil.MethodInfo): scala.Unit = ???

  def SetCustomAttribute(constr: ch.epfl.lamp.compiler.msil.ConstructorInfo, value: scala.Array[scala.Byte]): scala.Unit = ???

  protected var externAssemblies: scala.collection.mutable.Set[ch.epfl.lamp.compiler.msil.Assembly] = ???

  protected def registerExternAssembly(assembly: ch.epfl.lamp.compiler.msil.Assembly): scala.Unit = ???

  def getExternAssemblies(): scala.Array[ch.epfl.lamp.compiler.msil.Assembly] = ???

  def loadModules(): scala.Unit = ???

  var generatedFiles: scala.collection.mutable.ArrayBuffer[scala.Predef.String] = ???

  @scala.throws[T](classOf[java.io.IOException])
  def apply(v: ch.epfl.lamp.compiler.msil.emit.Visitor): scala.Unit = ???
}
